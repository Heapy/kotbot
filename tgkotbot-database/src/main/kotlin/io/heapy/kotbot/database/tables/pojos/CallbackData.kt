/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbot.database.tables.pojos


import io.heapy.kotbot.database.tables.interfaces.ICallbackData

import java.time.LocalDateTime
import java.util.UUID

import org.jooq.JSONB


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class CallbackData(
    override val id: UUID? = null,
    override val `data`: JSONB,
    override val created: LocalDateTime,
    override val consumed: Boolean? = null
): ICallbackData {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: CallbackData = other as CallbackData
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.`data` != o.`data`)
            return false
        if (this.created != o.created)
            return false
        if (this.consumed == null) {
            if (o.consumed != null)
                return false
        }
        else if (this.consumed != o.consumed)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.`data`.hashCode()
        result = prime * result + this.created.hashCode()
        result = prime * result + (if (this.consumed == null) 0 else this.consumed.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("CallbackData (")

        sb.append(id)
        sb.append(", ").append(`data`)
        sb.append(", ").append(created)
        sb.append(", ").append(consumed)

        sb.append(")")
        return sb.toString()
    }
}
