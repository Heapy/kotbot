/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbot.database.tables.daos


import io.heapy.kotbot.database.enums.ActionType
import io.heapy.kotbot.database.enums.MatchType
import io.heapy.kotbot.database.tables.GarbageMessages
import io.heapy.kotbot.database.tables.records.GarbageMessagesRecord

import kotlin.collections.List

import org.jooq.Configuration
import org.jooq.impl.DAOImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GarbageMessagesDao(configuration: Configuration?) : DAOImpl<GarbageMessagesRecord, io.heapy.kotbot.database.tables.pojos.GarbageMessages, Int>(GarbageMessages.GARBAGE_MESSAGES, io.heapy.kotbot.database.tables.pojos.GarbageMessages::class.java, configuration) {

    /**
     * Create a new GarbageMessagesDao without any configuration
     */
    constructor(): this(null)

    override fun getId(o: io.heapy.kotbot.database.tables.pojos.GarbageMessages): Int? = o.id

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfId(lowerInclusive: Int?, upperInclusive: Int?): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetchRange(GarbageMessages.GARBAGE_MESSAGES.ID, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    fun fetchById(vararg values: Int): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetch(GarbageMessages.GARBAGE_MESSAGES.ID, *values.toTypedArray())

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    fun fetchOneById(value: Int): io.heapy.kotbot.database.tables.pojos.GarbageMessages? = fetchOne(GarbageMessages.GARBAGE_MESSAGES.ID, value)

    /**
     * Fetch records that have <code>text BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfText(lowerInclusive: String, upperInclusive: String): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetchRange(GarbageMessages.GARBAGE_MESSAGES.TEXT, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>text IN (values)</code>
     */
    fun fetchByText(vararg values: String): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetch(GarbageMessages.GARBAGE_MESSAGES.TEXT, *values)

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfType(lowerInclusive: String, upperInclusive: String): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetchRange(GarbageMessages.GARBAGE_MESSAGES.TYPE, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    fun fetchByType(vararg values: String): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetch(GarbageMessages.GARBAGE_MESSAGES.TYPE, *values)

    /**
     * Fetch records that have <code>match BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfMatch(lowerInclusive: MatchType, upperInclusive: MatchType): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetchRange(GarbageMessages.GARBAGE_MESSAGES.MATCH, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>match IN (values)</code>
     */
    fun fetchByMatch(vararg values: MatchType): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetch(GarbageMessages.GARBAGE_MESSAGES.MATCH, *values)

    /**
     * Fetch records that have <code>action BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    fun fetchRangeOfAction(lowerInclusive: ActionType, upperInclusive: ActionType): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetchRange(GarbageMessages.GARBAGE_MESSAGES.ACTION, lowerInclusive, upperInclusive)

    /**
     * Fetch records that have <code>action IN (values)</code>
     */
    fun fetchByAction(vararg values: ActionType): List<io.heapy.kotbot.database.tables.pojos.GarbageMessages> = fetch(GarbageMessages.GARBAGE_MESSAGES.ACTION, *values)
}
