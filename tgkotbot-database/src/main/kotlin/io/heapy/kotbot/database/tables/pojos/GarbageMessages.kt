/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbot.database.tables.pojos


import io.heapy.kotbot.database.enums.ActionType
import io.heapy.kotbot.database.enums.MatchType
import io.heapy.kotbot.database.tables.interfaces.IGarbageMessages


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class GarbageMessages(
    override val id: Int? = null,
    override val text: String,
    override val type: String,
    override val match: MatchType,
    override val action: ActionType
): IGarbageMessages {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: GarbageMessages = other as GarbageMessages
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.text != o.text)
            return false
        if (this.type != o.type)
            return false
        if (this.match != o.match)
            return false
        if (this.action != o.action)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.text.hashCode()
        result = prime * result + this.type.hashCode()
        result = prime * result + this.match.hashCode()
        result = prime * result + this.action.hashCode()
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("GarbageMessages (")

        sb.append(id)
        sb.append(", ").append(text)
        sb.append(", ").append(type)
        sb.append(", ").append(match)
        sb.append(", ").append(action)

        sb.append(")")
        return sb.toString()
    }
}
