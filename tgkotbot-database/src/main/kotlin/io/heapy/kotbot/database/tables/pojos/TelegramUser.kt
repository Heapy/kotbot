/*
 * This file is generated by jOOQ.
 */
package io.heapy.kotbot.database.tables.pojos


import io.heapy.kotbot.database.enums.TelegramUserRole
import io.heapy.kotbot.database.enums.TelegramUserStatus
import io.heapy.kotbot.database.tables.interfaces.ITelegramUser

import java.time.LocalDateTime


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class TelegramUser(
    override val internalId: Long? = null,
    override val telegramId: Long,
    override val created: LocalDateTime? = null,
    override val lastMessage: LocalDateTime? = null,
    override val messageCount: Int? = null,
    override val status: TelegramUserStatus? = null,
    override val role: TelegramUserRole? = null,
    override val badge: String? = null,
    override val version: Int? = null
): ITelegramUser {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: TelegramUser = other as TelegramUser
        if (this.internalId == null) {
            if (o.internalId != null)
                return false
        }
        else if (this.internalId != o.internalId)
            return false
        if (this.telegramId != o.telegramId)
            return false
        if (this.created == null) {
            if (o.created != null)
                return false
        }
        else if (this.created != o.created)
            return false
        if (this.lastMessage == null) {
            if (o.lastMessage != null)
                return false
        }
        else if (this.lastMessage != o.lastMessage)
            return false
        if (this.messageCount == null) {
            if (o.messageCount != null)
                return false
        }
        else if (this.messageCount != o.messageCount)
            return false
        if (this.status == null) {
            if (o.status != null)
                return false
        }
        else if (this.status != o.status)
            return false
        if (this.role == null) {
            if (o.role != null)
                return false
        }
        else if (this.role != o.role)
            return false
        if (this.badge == null) {
            if (o.badge != null)
                return false
        }
        else if (this.badge != o.badge)
            return false
        if (this.version == null) {
            if (o.version != null)
                return false
        }
        else if (this.version != o.version)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.internalId == null) 0 else this.internalId.hashCode())
        result = prime * result + this.telegramId.hashCode()
        result = prime * result + (if (this.created == null) 0 else this.created.hashCode())
        result = prime * result + (if (this.lastMessage == null) 0 else this.lastMessage.hashCode())
        result = prime * result + (if (this.messageCount == null) 0 else this.messageCount.hashCode())
        result = prime * result + (if (this.status == null) 0 else this.status.hashCode())
        result = prime * result + (if (this.role == null) 0 else this.role.hashCode())
        result = prime * result + (if (this.badge == null) 0 else this.badge.hashCode())
        result = prime * result + (if (this.version == null) 0 else this.version.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("TelegramUser (")

        sb.append(internalId)
        sb.append(", ").append(telegramId)
        sb.append(", ").append(created)
        sb.append(", ").append(lastMessage)
        sb.append(", ").append(messageCount)
        sb.append(", ").append(status)
        sb.append(", ").append(role)
        sb.append(", ").append(badge)
        sb.append(", ").append(version)

        sb.append(")")
        return sb.toString()
    }
}
